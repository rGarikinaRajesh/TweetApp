spring.application.name=TweetApp
server.port=8888
#server.servlet.context-path=/api/v1.0/tweets

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

#Mongodb
spring.data.mongodb.database=tweetapp_db
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017

#Prometheus
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

#Logstash
logging.file.path=tweet-app-logs
#Kafka
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id= mytweetgroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
